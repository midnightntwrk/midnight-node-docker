# This file is part of https://github.com/midnightntwrk/midnight-node-docker
# Copyright (C) 2025 Midnight Foundation
# SPDX-License-Identifier: Apache-2.0
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

volumes:
  cardano-data: {}
  db-sync-data: {}
  postgres-data: {}
  ogmios-data: {}

services:
  cardano-node:
    image: ${CARDANO_IMAGE}
    platform: linux/amd64
    restart: unless-stopped
    container_name: cardano-node
    ports:
      - "3001:3001"
    environment:
      - NETWORK=${CARDANO_NETWORK}
      - CARDANO_NODE_SOCKET_PATH=/ipc/node.socket
    volumes:
      - ${HOME_IPC}:/ipc   # Use ${HOME_IPC} from .envrc
      - ${CARDANO_DATA_DIR}:/data
    healthcheck:
      # Ping the EKG port to see if it responds.
      # Assuming if EKG isn't up then the rest of cardano-node isn't either.
      test: ["CMD-SHELL", "curl -f 127.0.0.1:12788 || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:15.3
    platform: linux/amd64
    container_name: db-sync-postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql.conf
    command: -c config_file=/etc/postgresql.conf -c listen_addresses='*'
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  cardano-db-sync:
    image: ghcr.io/intersectmbo/cardano-db-sync:13.6.0.4
    platform: linux/amd64
    container_name: cardano-db-sync
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_SYNC_CONFIG=/etc/db-sync-config.yaml
      - NETWORK=${CARDANO_NETWORK}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${HOME_IPC}:/node-ipc  # Use ${HOME_IPC} from .envrc
      - db-sync-data:/var/lib
      - ./db-sync-config.yaml:/etc/db-sync-config.yaml
      - ./cardano-configurations/network/${CARDANO_NETWORK}:/etc/config/

  cardano-ogmios:
    image: cardanosolutions/ogmios:v6.11.0
    platform: linux/amd64
    container_name: cardano-ogmios
    restart: unless-stopped
    environment:
      - DATA_DIR=/data
    ports:
      - "1337:1337"
    volumes:
      - ${HOME_IPC}:/ipc  # Use ${HOME_IPC} from .envrc
      - ogmios-data:/data
    command:
      - --node-socket
      - /ipc/node.socket
      - --node-config
      - /config/${CARDANO_NETWORK}/cardano-node/config.json
      - --host
      - 0.0.0.0
